# This Docker Compose file can be used to quickly bootup Dgraph Zero
# and Alpha in different Docker containers.

# It mounts /tmp/data on the host machine to /dgraph within the
# container. You can change /tmp/data to a more appropriate location.
# Run `docker-compose up` to start Dgraph.

# DGraph Zero controls cluster, assigns group servers & re-balances
# data between server groups                : 5080:5080, 6080:6080
# DGraph Alpa hosts predicates and indexes  : 8080:8080, 9080:9080
# Ratel serves the UI to run queries        : 8000:8000

# version: "3.2"
services:

  zero:
    image: dgraph/dgraph:latest
    volumes:
      - data:/dgraph
    ports:
      - 5080:5080
      - 6080:6080
    restart: on-failure
    command: dgraph zero --my=zero:5080
  alpha:
    image: dgraph/dgraph:latest
    volumes:
      - data:/dgraph
    ports:
      - 8080:8080
      - 9080:9080
    restart: on-failure
    command: dgraph alpha --my=alpha:7080 --lru_mb=2048 --zero=zero:5080
  ratel:
    image: dgraph/dgraph:latest
    ports:
      - 8000:8000
    command: dgraph-ratel

volumes:
  data:

  # frontend currently configured for using local volume
  # but react storefront doesn't automatically recompile with edits
  # so am running just the db in a container and using app locally
  # use COPY frontend/src/:/app/ in Dockerfile instead of volumes when ready
  # frontend:
  #   build: ./frontend
  #   ports:
  #     - 3000:3000
  #   volumes:
  #     - ./frontend/src:/app/
